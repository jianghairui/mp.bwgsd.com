<?php
/**
 * Created by PhpStorm.
 * User: JHR
 * Date: 2019/4/18
 * Time: 18:17
 */
namespace app\app\controller;
use think\Controller;
use think\Db;
use think\exception\HttpResponseException;
class Base extends Controller
{

    protected $cmd;
    protected $controller;
    protected $rename_base_path;
    protected $domain;
    protected $weburl;
    protected $myinfo;

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->cmd = request()->controller() . '/' . request()->action();
        $this->controller = request()->controller();
        $this->rename_base_path = 'upload/api/';
        $this->domain = config('domain');
        $this->weburl = config('weburl');
//        $this->checkSession();
    }

    private function checkSession()
    {
        $noneed = [
            'Notifysms',
            'Test',
        ];
        if (in_array($this->controller, $noneed) || in_array($this->cmd, $noneed)) {
            return true;
        } else {
            $token = input('post.token');
            if (!$token) {
                throw new HttpResponseException(ajax('token is empty', -6));
            }
            try {
                $exist = Db::table('mp_user')->where([
                    ['token', '=', $token]
                ])->find();
            } catch (\Exception $e) {
                throw new HttpResponseException(ajax($e->getMessage(), -1));
            }
            if ($exist) {
                if (($exist['last_login_time'] + 3600 * 24 * 7) < time()) {
                    throw new HttpResponseException(ajax('invalid token', -3));
                }
                $this->myinfo = $exist;
                return true;
            } else {
                throw new HttpResponseException(ajax('invalid token', -3));
            }
        }

    }
    //xml数据日志
    protected function xmllog($cmd = '', $msg = '')
    {
        $file = LOG_PATH . '/xml.log';
        $text = '[Time ' . date('Y-m-d H:i:s') . "]\ncmd:" . $cmd . "\n" . $msg . "\n---END---" . "\n";
        if (false !== fopen($file, 'a+')) {
            file_put_contents($file, $text, FILE_APPEND);
        } else {
            echo '创建失败';
        }
    }

    //Exception日志
    protected function excep($cmd, $str)
    {
        $file = LOG_PATH . '/exception.log';
        create_dir($file);
        $text = '[Time ' . date('Y-m-d H:i:s') . "]\ncmd:" . $cmd . "\n" . $str . "\n---END---" . "\n";
        if (false !== fopen($file, 'a+')) {
            file_put_contents($file, $text, FILE_APPEND);
        } else {
            echo '创建失败';
        }
    }

    //支付回调日志
    protected function paylog($cmd, $str)
    {
        $file = LOG_PATH . '/pay_notify.log';
        create_dir($file);
        $text = '[Time ' . date('Y-m-d H:i:s') . "]\ncmd:" . $cmd . "\n" . $str . "\n---END---" . "\n";
        if (false !== fopen($file, 'a+')) {
            file_put_contents($file, $text, FILE_APPEND);
        } else {
            echo '创建失败';
        }
    }

    protected function log($cmd, $str, $file = LOG_PATH . '/common.log')
    {
        create_dir($file);
        $text = '[Time ' . date('Y-m-d H:i:s') . "]\ncmd:" . $cmd . "\n" . $str . "\n---END---" . "\n";
        if (false !== fopen($file, 'a+')) {
            file_put_contents($file, $text, FILE_APPEND);
        } else {
            echo '创建失败';
        }
    }
    //消息日志
    protected function msglog($cmd,$str) {
        $file= LOG_PATH . '/message.log';
        create_dir($file);
        $text='[Time ' . date('Y-m-d H:i:s') ."]\ncmd:" .$cmd. "\n" .$str. "\n---END---" . "\n";
        if(false !== fopen($file,'a+')){
            file_put_contents($file,$text,FILE_APPEND);
        }else{
            echo '创建失败';
        }
    }


}